# This file is a template, and might need editing before it works on your project.
# use the official gcc image, based on debian
# can use verions as well, like gcc:5.2
# see https://hub.docker.com/_/gcc/
image: ubuntu:16.04

build:
  stage: build
  # instead of calling g++ directly you can also use some build toolkit like make
  # install the necessary build tools when needed
  before_script:
     - apt update && apt -y install make cmake python python-pip libboost-all-dev && pip install six mako
  script:
    - mkdir build && cd build && cmake .. && make -j
  artifacts:
    paths:
      - build/
  # depending on your build setup it's most likely a good idea to cache outputs to reduce the build time
  # cache:
  #   paths:
  #     - "*.o"

# run tests using the binary built before
test:
  stage: test
  before_script:
    - apt update && apt -y install cmake python python-pip libboost-all-dev && pip install six mako
  script:
    - cd build && ctest -V

